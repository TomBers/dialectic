<div class="h-screen flex flex-col">
  <!-- Top section -->
  <div
    class="flex-none fixed left-0 right-0 max-w-md bg-white border-b border-gray-200"
    style="top:56px;z-index:11;"
  >
    <div class="p-2">
      <div class="flex items-center gap-4">
        <DialecticWeb.LockComp.render
          :if={@current_user && @graph_struct.user_id == @current_user.id}
          id="lock-graph"
          graph_struct={@graph_struct}
        />
        
<!-- Search bar -->
        <div class="flex-1">
          <form phx-submit="search_nodes" phx-change="search_nodes" class="flex relative">
            <input
              type="text"
              name="search_term"
              id="search_input"
              value={@search_term}
              placeholder="Search ..."
              class="block w-full rounded-lg text-zinc-900 focus:ring-0 sm:text-sm sm:leading-6 border-zinc-300 focus:border-zinc-800"
              autocomplete="off"
              phx-debounce="300"
            />
            <%= if @search_term && @search_term != "" do %>
              <button
                type="button"
                phx-click="clear_search"
                class="absolute right-0 top-5 bottom-0 flex items-center pr-3 text-gray-500 hover:text-gray-700"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              </button>
            <% end %>
          </form>
        </div>
      </div>
      
<!-- Search results (only visible when search_term is present) -->
      <%= if @search_term && @search_term != "" && length(@search_results) > 0 do %>
        <div class="bg-white p-2 max-h-60 overflow-y-auto border-b border-gray-200">
          <h3 class="text-sm font-semibold mb-2 text-gray-700">
            Search Results ({length(@search_results)})
          </h3>
          <ul class="space-y-2">
            <%= for node <- @search_results do %>
              <li
                class="p-2 bg-gray-50 hover:bg-gray-100 rounded text-sm cursor-pointer"
                phx-click="node_clicked"
                phx-value-id={node.id}
              >
                <div class="font-semibold text-xs text-gray-500">
                  {node.id} • {node.class}
                </div>
                <div class="truncate">
                  {String.replace_prefix(node.content, "Title:", "")
                  |> String.slice(0, 100)}{if String.length(node.content) >
                                                100,
                                              do: "...",
                                              else: ""}
                </div>
              </li>
            <% end %>
          </ul>
        </div>
      <% end %>
      
<!-- No results message -->
      <%= if @search_term && @search_term != "" && length(@search_results) == 0 do %>
        <div class="bg-white p-2 border-b border-gray-200">
          <p class="text-sm text-gray-500 text-center">
            No nodes found matching "{@search_term}"
          </p>
        </div>
      <% end %>
    </div>
  </div>
  
<!-- Main content with drawer menu -->
  <div class="flex-1 flex">
    <!-- Left side: Graph (expands to full width when drawer is closed) -->
    <div class={if @drawer_open, do: "w-0 md:w-3/5", else: "w-full"}>
      <div
        id="cy"
        class="h-full w-full"
        data-graph={@f_graph}
        data-node={@node.id}
        data-operation={@graph_operation}
        data-div="cy"
        phx-hook="Graph"
        phx-update="ignore"
      >
      </div>

      <.modal
        :if={@show_combine && @node.id}
        on_cancel={JS.push("modal_closed")}
        id="confirm-modal"
        show
      >
        <.live_component module={CombineComp} graph={@graph} node={@node} id="Modal" />
      </.modal>

      <.modal :if={@show_group_modal} id="group-modal" on_cancel={JS.push("cancel_group")} show>
        <h2 class="text-xl font-semibold mb-4">Group selected nodes</h2>

        <.simple_form for={@group_changeset} phx-submit="group_nodes">
          <.input field={@group_changeset[:title]} label="Group title" required />
          <input type="hidden" name="ids" value={Enum.join(@candidate_ids, ",")} />
          <:actions>
            <.button phx-disable-with="Grouping…">Create group</.button>
          </:actions>
        </.simple_form>
      </.modal>
    </div>
    
<!-- Toggle button for drawer -->
    <button
      id="drawer-toggle"
      phx-click="toggle_drawer"
      class="fixed top-[40px] right-4 p-2 rounded-md shadow-md z-50 cursor-pointer hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors bg-white"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d={if @drawer_open, do: "M13 5l7 7-7 7", else: "M11 19l-7-7 7-7"}
        />
      </svg>
      <span class="sr-only">{if @drawer_open, do: "Close", else: "Open"} drawer</span>
    </button>
    
<!-- Right side: Chat (Drawer) -->
    <div class={
      if @drawer_open,
        do:
          "fixed top-0 bottom-0 right-0 md:relative w-full p-4 md:p-0 md:w-2/5 flex flex-col transition-all duration-300 ease-in-out bg-white z-40",
        else: "w-0 overflow-hidden transition-all duration-300 ease-in-out"
    }>
      <div class="flex-1 overflow-y-auto">
        <.live_component
          module={NodeComp}
          id="node-comp"
          node={@node}
          user={@user}
          form={@form}
          graph_id={@graph_id}
          ask_question={@ask_question}
        />
      </div>
    </div>
  </div>
</div>
