<div class="h-screen flex flex-col">
  
<!-- Top section -->
  <div class="flex-none">
    <div class="top-right">
      <DialecticWeb.LockComp.render
        :if={@current_user && @graph_struct.user_id == @current_user.id}
        id="lock-graph"
        graph_struct={@graph_struct}
      />
      
<!-- Search bar -->
      <div class="p-2 border-b border-gray-200">
        <form phx-submit="search_nodes" phx-change="search_nodes" class="flex relative">
          <input
            type="text"
            name="search_term"
            id="search_input"
            value={@search_term}
            placeholder="Search nodes..."
            class="w-full px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
            autocomplete="off"
            phx-debounce="300"
          />
          <%= if @search_term && @search_term != "" do %>
            <button
              type="button"
              phx-click="clear_search"
              class="absolute right-3 top-0 bottom-0 flex items-center pr-3 text-gray-500 hover:text-gray-700"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          <% end %>
        </form>
      </div>
      
<!-- Search results (only visible when search_term is present) -->
      <%= if @search_term && @search_term != "" && length(@search_results) > 0 do %>
        <div class="bg-white p-2 max-h-60 overflow-y-auto border-b border-gray-200">
          <h3 class="text-sm font-semibold mb-2 text-gray-700">
            Search Results ({length(@search_results)})
          </h3>
          <ul class="space-y-2">
            <%= for node <- @search_results do %>
              <li
                class="p-2 bg-gray-50 hover:bg-gray-100 rounded text-sm cursor-pointer"
                phx-click="node_clicked"
                phx-value-id={node.id}
              >
                <div class="font-semibold text-xs text-gray-500">
                  ID: {node.id} • {node.class}
                </div>
                <div class="truncate">
                  {String.slice(node.content, 0, 100)}{if String.length(node.content) > 100,
                    do: "...",
                    else: ""}
                </div>
              </li>
            <% end %>
          </ul>
        </div>
      <% end %>
      
<!-- No results message -->
      <%= if @search_term && @search_term != "" && length(@search_results) == 0 do %>
        <div class="bg-white p-2 border-b border-gray-200">
          <p class="text-sm text-gray-500 text-center">
            No nodes found matching "{@search_term}"
          </p>
        </div>
      <% end %>
    </div>
  </div>
  
<!-- Main content with drawer menu -->
  <div class="flex-1 flex">
    <!-- Left side: Graph (expands to full width when drawer is closed) -->
    <div
      class={if @drawer_open, do: "w-2/3", else: "w-full"}
      phx-window-keydown="KeyBoardInterface"
    >
      <div
        id="cy"
        class="h-full w-full"
        data-graph={@f_graph}
        data-node={@node.id}
        data-operation={@graph_operation}
        data-div="cy"
        phx-hook="Graph"
        phx-update="ignore"
      >
      </div>

      <.modal
        :if={@show_combine && @node.id}
        on_cancel={JS.push("modal_closed")}
        id="confirm-modal"
        show
      >
        <.live_component module={CombineComp} graph={@graph} node={@node} id="Modal" />
      </.modal>

      <.modal :if={@show_group_modal} id="group-modal" on_cancel={JS.push("cancel_group")} show>
        <h2 class="text-xl font-semibold mb-4">Group selected nodes</h2>

        <.simple_form for={@group_changeset} phx-submit="group_nodes">
          <.input field={@group_changeset[:title]} label="Group title" required />
          <input type="hidden" name="ids" value={Enum.join(@candidate_ids, ",")} />
          <:actions>
            <.button phx-disable-with="Grouping…">Create group</.button>
          </:actions>
        </.simple_form>
      </.modal>
    </div>
    
<!-- Toggle button for drawer -->
    <button
      id="drawer-toggle"
      phx-click="toggle_drawer"
      class="fixed right-0 top-1/2 transform -translate-y-1/2 m-4 p-4 rounded-l-md shadow-md z-50 cursor-pointer hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d={if @drawer_open, do: "M13 5l7 7-7 7", else: "M11 19l-7-7 7-7"}
        />
      </svg>
      <span class="sr-only">{if @drawer_open, do: "Close", else: "Open"} drawer</span>
    </button>
    
<!-- Right side: Chat (Drawer) -->
    <div class={
      if @drawer_open,
        do: "w-1/3 h-full flex flex-col transition-all duration-300 ease-in-out",
        else: "w-0 overflow-hidden transition-all duration-300 ease-in-out"
    }>
      <ul id="online_users" phx-update="stream" class="space-y-1">
        <li
          :for={{dom_id, %{id: id, metas: _metas}} <- @streams.presences}
          id={dom_id}
          class="flex items-center gap-1 px-2 py-1 hover:bg-gray-200 rounded text-xs"
        >
          <!-- Online status indicator -->
          <span class="w-2.5 h-2.5 bg-green-500 rounded-full border border-white"></span>
          <!-- Username -->
          <span>{id}</span>
        </li>
      </ul>
      <div class="flex-1 overflow-y-auto">
        <!-- Two-button menu with consistent styling -->
        <div class="flex space-x-2 items-center mb-2">
          <!-- Toggle Button with dynamic text and icon -->
          <.button
            phx-click="toggle_node_menu"
            class="inline-flex items-center text-xs font-semibold px-2 py-1 rounded bg-white border border-zinc-200 text-zinc-900 hover:bg-zinc-50 hover:text-zinc-700 transition-colors"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4 mr-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
            >
              <%= if @node_menu_visible do %>
                <!-- History icon -->
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              <% else %>
                <!-- Node icon -->
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6z"
                />
              <% end %>
            </svg>
            <%= if @node_menu_visible do %>
              Show History
            <% else %>
              Show Node
            <% end %>
          </.button>
          
<!-- Read as text link -->
          <.link
            href={~p"/#{@graph_id}/linear"}
            id="text-link"
            class="inline-flex items-center text-xs font-semibold px-2 py-1 rounded bg-white border border-zinc-200 text-zinc-900 hover:bg-zinc-50 hover:text-zinc-700 transition-colors"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4 mr-1"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h7" />
            </svg>
            Read as text
          </.link>
        </div>

        <%= if @node_menu_visible do %>
          <.live_component
            module={NodeComp}
            id="node-comp"
            node={@node}
            user={@user}
            form={@form}
            graph_id={@graph_id}
            ask_question={@ask_question}
          />
        <% else %>
          <.live_component
            module={HistoryComp}
            form={@form}
            node={@node}
            user={@user}
            graph_id={@graph_id}
            id="Chat"
          />
        <% end %>
      </div>
    </div>
  </div>
</div>
