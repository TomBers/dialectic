<div class="container mx-auto p-6">
  <!-- Header -->
  <header class="">
    <h1 class="text-4xl font-extrabold text-gray-800">MuDG</h1>
    <article class="prose prose-stone prose-sm">
      A dissatisfaction with the quality of debates and discussions that often go off-topic or bypass interesting questions.

      ||
      Recognition that conversations are inherently structured like graphs.

      ||
      Using AI to augment and refine concepts and explore interesting directions.

      ||
      Enabling collaboration through building knowledge and fostering productive debate together.

      ||
      Creating a way to follow conversations based on shared axioms and definitions - bringing clarity to complex issues.

      ||  Developing visualization and traversal tools to explore and understand conversation structures and their underlying concepts.
    </article>
    <.link navigate={~p"/intro/what"} class="text-xl text-blue-600 hover:text-blue-400">
      More
    </.link>
  </header>
  <div class="max-w-4xl mx-auto">
    <div class="flex flex-col space-y-4">
      <div id="question-container">
        Thinking...
      </div>
      <.link navigate={~p"/ideas/all"} class="text-xl text-blue-600 hover:text-blue-400">
        More ideas
      </.link>

      <script>
        // Global variable to hold the typing interval ID.
        let currentInterval = null;
        updateQuestion();

        // Function to display text letter by letter.
        function typeText(text, element, delay = 50) {
          // If an animation is already running, clear it.
          if (currentInterval) {
            clearInterval(currentInterval);
            currentInterval = null;
          }
          let i = 0;
          element.innerText = "";
          currentInterval = setInterval(() => {
            if (i < text.length) {
              element.innerText += text.charAt(i);
              i++;
            } else {
              clearInterval(currentInterval);
              currentInterval = null;
            }
          }, delay);
        }

        // Function to fetch a new question and display it with the typing effect.
        function updateQuestion() {
          fetch("/api/random_question")
            .then(response => response.json())
            .then(data => {
              const container = document.getElementById("question-container");
              typeText(data.question, container, 50); // 50ms delay between letters
            })
            .catch(error => console.error('Error fetching new question:', error));
        }

        // Update the question every 10 seconds (10000ms)
        setInterval(updateQuestion, 10000);
      </script>
    </div>
    <.form
      :let={f}
      for={%{}}
      action={~p"/conversation"}
      class="mb-8 bg-white shadow-md rounded-lg p-6"
    >
      <div class="space-y-4">
        <.input field={f[:conversation]} type="text" label="Start a conversation" class="w-full" />
        <.button
          type="submit"
          class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-md transition duration-150 ease-in-out"
        >
          Submit
        </.button>
      </div>
    </.form>
    <section class="mb-12">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- My Graphs Card -->
        <div class="bg-white shadow rounded-lg p-6">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">
            My Graphs ({@stats.graphs |> length()})
          </h3>
          <ul class="space-y-3">
            <%= for g <- @stats.graphs do %>
              <li>
                <.link
                  navigate={gen_link(g.title)}
                  class="block p-4 bg-blue-50 hover:bg-blue-100 rounded transition"
                >
                  <span class="font-bold text-blue-700">{g.title}</span>
                  <span class="ml-2 text-sm text-gray-500">
                    ({g.notes |> Enum.filter(& &1.is_noted) |> length()} notes)
                  </span>
                </.link>
              </li>
            <% end %>
          </ul>
        </div>
        
<!-- My Noted Items Card -->
        <div class="bg-white shadow rounded-lg p-6">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">
            My Notes ({@stats.notes |> Enum.filter(& &1.is_noted) |> length()})
          </h3>
          <ul class="space-y-3">
            <%= for note <- @stats.notes |> Enum.filter(& &1.is_noted) do %>
              <li>
                <.link
                  navigate={gen_link(note.graph_title, note.node_id)}
                  class="block p-4 bg-green-50 hover:bg-green-100 rounded transition"
                >
                  <span class="font-bold text-green-700">{note.graph_title}</span>
                  <span class="ml-2 text-sm text-gray-500">Node {note.node_id}</span>
                </.link>
              </li>
            <% end %>
          </ul>
        </div>
      </div>
    </section>
    
<!-- Top Graphs Section -->
    <section>
      <h2 class="text-2xl font-bold text-gray-700 mb-4">
        Top Graphs (<.link
          navigate={~p"/view_all/graphs"}
          class="text-xl text-blue-600 hover:text-blue-400"
        >All Graphs</.link>)
      </h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        <%= for {g, count} <- @top_graphs do %>
          <.link navigate={gen_link(g.title)} class="block">
            <div class="bg-white shadow rounded-lg p-6 hover:shadow-lg transition">
              <h3 class="font-bold text-xl text-gray-800 mb-1">
                <span :if={!g.is_public}>ðŸ”’</span>{g.title}
              </h3>
              <p class="text-sm text-gray-500">({count} notes)</p>
            </div>
          </.link>
        <% end %>
      </div>
    </section>
  </div>
  <footer class="w-full bg-gray-100 py-4 mt-auto">
    <div class="container mx-auto px-4">
      <div class="flex justify-center items-center">
        <a
          href="https://twitter.com/TJCBerman"
          target="_blank"
          rel="noopener noreferrer"
          class="text-gray-600 hover:text-blue-500 transition-colors duration-200"
        >
          Follow on Twitter
        </a>
      </div>
    </div>
  </footer>
</div>
